apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
spec:
  replicas: {{ .Values.walrus.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Release.Name }}
          image: "{{ .Values.walrus.image.repository }}:{{ .Values.walrus.image.tag }}"
          imagePullPolicy: {{ .Values.walrus.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.walrus.service.targetPort }}
          # entrypoint: ["/bin/sh", "-c"]
          # command: ["tail",  "-f", "/dev/null"]
          command: ["/bin/sh", "-c", "/usr/src/app/entrypoint.sh"]
          env:
            {{- range $key, $value := .Values.walrus.env }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
          envFrom:
            - secretRef:
                name: {{ .Release.Name }}-env

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-celery-playlog
spec:
  replicas: {{ .Values.celery.playlog.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-celery-playlog
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-celery-playlog
    spec:
      containers:
        - name: celery-playlog
          image: "{{ .Values.celery.playlog.image.repository }}:{{ .Values.celery.playlog.image.tag }}"
          imagePullPolicy: {{ .Values.celery.playlog.image.pullPolicy }}
          command: ["/bin/sh", "-c", "/usr/src/app/entrypoint-celery.sh", "playlog_q"]
          env:
            {{- range $key, $value := .Values.walrus.env }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
          envFrom:
            - secretRef:
                # install secrets from walrus-env
                name: {{ .Release.Name }}-env

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-celery-beat
spec:
  replicas: {{ .Values.celery.beat.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-celery-beat
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-celery-beat
    spec:
      containers:
        - name: celery-beat
          image: "{{ .Values.celery.beat.image.repository }}:{{ .Values.celery.beat.image.tag }}"
          imagePullPolicy: {{ .Values.celery.beat.image.pullPolicy }}
          command: ["celery", "-A", "walrus", "beat", "--loglevel=info"]
          env:
            {{- range $key, $value := .Values.walrus.env }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
          envFrom:
            - secretRef:
                # install secrets from walrus-env
                name: {{ .Release.Name }}-env
