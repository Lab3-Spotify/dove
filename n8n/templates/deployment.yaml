apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
spec:
  replicas: {{ .Values.n8n.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      volumes:
        - name: {{ .Release.Name }}-data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-data-pvc
      containers:
        - name: {{ .Release.Name }}
          image: "{{ .Values.n8n.image.repository }}:{{ .Values.n8n.image.tag }}"
          imagePullPolicy: {{ .Values.n8n.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.n8n.service.targetPort }}
          volumeMounts:
            - name: {{ .Release.Name }}-data
              mountPath: /home/node/{{ .Release.Name }}-data
          env:
            {{- range $key, $value := .Values.n8n.env }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
          envFrom:
            - secretRef:
                name: {{ .Release.Name }}-n8n-env

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-python-serverless
spec:
  replicas: {{ .Values.pysvc.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-python-serverless
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-python-serverless
    spec:
      volumes:
        - name: {{ .Release.Name }}-serverless-data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-serverless-data-pvc
      containers:
        - name: {{ .Release.Name }}-python-serverless
          image: "{{ .Values.pysvc.image.repository }}:{{ .Values.pysvc.image.tag }}"
          imagePullPolicy: {{ .Values.pysvc.image.pullPolicy }}
          workingDir: /usr/src/app/{{ .Release.Name }}-data/serverless
          command: ["python", "main.py"]
          ports:
            - containerPort: {{ .Values.pysvc.service.targetPort }}
          volumeMounts:
            - name: {{ .Release.Name }}-serverless-data
              mountPath: /usr/src/app/{{ .Release.Name }}-data/serverless
          env:
            {{- range $key, $value := .Values.pysvc.env }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
          # envFrom:
          #   - secretRef:
          #       name: {{ .Release.Name }}-n8n-env